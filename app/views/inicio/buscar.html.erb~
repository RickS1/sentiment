<style>

.tooltip {
  position: absolute;
  width: 200px;
  height: 28px;
  pointer-events: none;
}

.axis path {
  display: none;
}

.axis line {
  stroke-opacity: 0.3;
  shape-rendering: crispEdges;
}

.view {
	fill: rgb(255,255,255);
	opacity: 0;
	stroke: rgb(255,255,255);
}

button {
  position: absolute;
  top: 520px;
  left: 450px;
}

#b1{
	top: 1120px;
}

#b2{
	top: 1720px;
}

</style>
<div>
<button id="b0">Reset</button>
<svg id="svg0" width="650" height="600">
</svg>
</div>
<% if false %>
<div>
<button id="b1">Reset</button>
<svg id="svg1" width="650" height="600">
</svg>
</div>
<div>
<button id="b2">Reset</button>
<svg id="svg2" width="650" height="600">
</svg>
</div>
<% end %>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>

d3.csv('http://200.12.162.229:81/usr_stats_TrumpPresident.csv',function(data){
	var datos = [];
	console.log(data[1]);
	while(datos.length < 1000){
		var index = Math.round(Math.random()*data.length);
		if(data[index]["posts"] != null || data[index]["posts"] != undefined){
			datos.push(data[index]);
		}
		data.splice(index,1);
	}
	datos.forEach(function(d){d['followers'] = +d['followers']; d['following'] = +d['following'];});
	var svg = d3.select("#svg0"),
			width = 500,
			height = 500;

	var zoom = d3.zoom()
			.scaleExtent([1, 1000000])
			.translateExtent([[-30, -100], [width + 50000, height + 100]])
			.on("zoom", zoomed);

	var x = d3.scaleLinear()
			.domain(d3.extent(datos,function(d){return d['following']}))
			.range([-1, width + 1]);

	var y = d3.scaleLinear()
			.domain(d3.extent(datos,function(d){return d['following']}))
			.range([height + 1, -1]);

	svg.append("defs").append("clipPath")
		  .attr("id", "clip")
		.append("rect")
		  .attr("width", width)
		  .attr("height", height);

	var tooltip = d3.select("body").append("div")
    .attr("class", "tooltip")
    .style("opacity", 0);

	var color = d3.scaleLinear()
					.domain([0,1,2,3,4])
					.range(["#ff0000","#0000ff","#00ff00","#ffff00","#ff00ff"]);

	var xAxis = d3.axisBottom(x)
			.ticks((width + 2) / (height + 2) * 10)
			.tickSize(height)
			.tickPadding(8 - height);

	var yAxis = d3.axisRight(y)
			.ticks(10)
			.tickSize(width)
			.tickPadding(8 - width);
			
	var textx = svg.append("text")
			.attr("class", "label")
			.attr("x", width + 50)
			.attr("y", 15)
			.attr("text-anchor", "middle")
			.text("Seguidores");
		
	var texty = svg.append("text")
			.attr("class", "label")
			.attr("x", 35)
			.attr("y", height + 20)
			.attr("text-anchor", "middle")
			.text("Siguiendo");

	var titulo = svg.append("text")
			.attr("class", "label")
			.attr("x", width/2)
			.attr("y", height + 30)
			.attr("font-size", 20)
			.attr("text-anchor", "middle")
			.text("Ayotzinapa");

	var view0 = svg.append("rect")
			.attr("class", "view")
			.attr("id","rect0")
			.attr("x", 0.5)
			.attr("y", 0.5)
			.attr("width", width - 1)
			.attr("height", height - 1);

	var gX = svg.append("g")
			.attr("class", "axis axis--x")
			.call(xAxis);

	var gY = svg.append("g")
			.attr("class", "axis axis--y")
			.call(yAxis);

	var r = 3;

	d3.select("#b0")
			.on("click", resetted);

	var points = svg.append("g")
			.attr("clip-path", "url(#clip)")
			.selectAll(".punto")
			.data(datos)
			.enter().append("circle")
			.attr("class", "punto")
			.attr("id",function(d,i){return "punto-" + i})
			.attr("r",r)
			.attr("cx", function(d){ return x(d["followers"])})
			.attr("cy", function(d){ return y(d["following"])})
			.attr("stroke", "#dddddd")
			.attr("stroke-width", 1)
			.attr("opacity", 0.6)
			.attr("fill", function(d){ 
				var ratio = (d["following"] > 0 ? d["followers"]/d["following"] : d["followers"]);
				ratio = (ratio <= 0.25 ? 0 : (ratio <= 0.5 ? 1 : ( ratio <= 2 ? 2 : ( ratio <= 4 ? 3 : 4))))
				return color(ratio);
			})
			.on("mouseover", function(d,i) {
					d3.selectAll(".punto").transition().attr("opacity", "0.2").duration(200);
					d3.select("#punto-"+i).transition().attr("opacity","1").duration(200);
          tooltip.transition()
               .duration(200)
               .style("opacity", .9);
          tooltip.html(d["id"] + "<br/> (" + d["followers"] 
	        + ", " + d["following"] + ")")
               .style("left", (d3.event.pageX + 5) + "px")
               .style("top", (d3.event.pageY - 28) + "px");
      })
      .on("mouseout", function(d) {
					d3.selectAll(".punto").transition().attr("opacity", "").duration(200);
          tooltip.transition()
               .duration(500)
               .style("opacity", 0);
      });

	svg.call(zoom);

	function zoomed() {
		view0.attr("transform", d3.event.transform);
		gX.call(xAxis.scale(d3.event.transform.rescaleX(x)));
		gY.call(yAxis.scale(d3.event.transform.rescaleY(y)));
		d3.selectAll(".punto").attr("transform",d3.event.transform)
			.attr("r", r/d3.event.transform.k)
			.attr("stroke-width",1/d3.event.transform.k);
	}

	function resetted() {
		svg.transition()
			  .duration(750)
			  .call(zoom.transform, d3.zoomIdentity);
	}


});

</script>


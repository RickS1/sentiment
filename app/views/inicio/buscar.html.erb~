<style>

.tooltip {
  position: absolute;
  width: 200px;
  height: 28px;
  pointer-events: none;
}

.axis path {
  display: none;
}

.axis line {
  stroke-opacity: 0.3;
  shape-rendering: crispEdges;
}

.view {
	fill: rgb(255,255,255);
	opacity: 0;
	stroke: rgb(255,255,255);
}

button {
  position: absolute;
  top: 520px;
  left: 450px;
}

#b1{
	top: 1120px;
}

#b2{
	top: 1720px;
}

</style>
<div>
<button id="b0">Reset</button>
<svg id="svg0" width="650" height="600">
</svg>
</div>
<div>
<svg id="svg1" width="650" height="600">
</svg>
</div>
<% if false %>
<div>
<button id="b2">Reset</button>
<svg id="svg2" width="650" height="600">
</svg>
</div>
<% end %>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>

d3.csv('http://200.12.162.229:81/usr_stats_TrumpPresident.csv',function(data){
	var datos = [];
	while(datos.length < 1500){
		var index = Math.round(Math.random()*data.length);
		if(+data[index]["followers"] < 2500 && +data[index]["following"] < 2500 && (typeof data[index]["posts"] !== undefined && data[index]["posts"] != null && !isNaN(data[index]["posts"]))){
			datos.push(data[index]);
		}
		data.splice(index,1);
	}
	var porcentajes_usuarios = [
		{lab: "<1/4", color: "#ff0000", sum: 0},
		{lab: "1/4 - 1/2", color: "#0000ff", sum: 0},
		{lab: "1/2 - 2", color: "#00ff00", sum: 0},
		{lab: "2 - 4", color: "#ffff00", sum: 0},
		{lab: ">4", color: "#ff00ff", sum: 0}
	];

	var total = data.length;
	
	data.forEach(function(d){
		var ratio = (d["following"] > 0 ? d["followers"]/d["following"] : d["followers"]);
		if(ratio <= 0.25) porcentajes_usuarios[0]["sum"] = porcentajes_usuarios[0]["sum"] + 1;
		else if(ratio <= 0.5) porcentajes_usuarios[1]["sum"] = porcentajes_usuarios[1]["sum"] + 1;
		else if(ratio <= 2) porcentajes_usuarios[2]["sum"] = porcentajes_usuarios[2]["sum"] + 1;
		else if(ratio <= 4) porcentajes_usuarios[3]["sum"] = porcentajes_usuarios[3]["sum"] + 1;
		else percent_5 = porcentajes_usuarios[4]["sum"] = porcentajes_usuarios[4]["sum"] + 1;
	});

	datos.forEach(function(d){
		d['followers'] = +d['followers']; 
		d['following'] = +d['following']; 
		d["posts"] = +d["posts"];
		var fecha = d["desde"].split(" ")[0].split("-");
		var hoy = (new Date()).toString().split(" ");
		var f_hoy = new Date(+hoy[3], month2Num(hoy[1]), +hoy[2]);
		d["desde"] = new Date(fecha[0],fecha[1] - 1, fecha[2]);
		d["dias"] = Math.round(( f_hoy.getTime() - d["desde"].getTime())/(1000*60*60*24));
		d["ratio"] = d["posts"]/d["dias"];
	});

	var svg = d3.select("#svg0"),
			width = 500,
			height = 500;

	var zoom = d3.zoom()
			.scaleExtent([1, 1000000])
			.translateExtent([[-30, -100], [width + 50000, height + 100]])
			.on("zoom", zoomed);

	var x = d3.scaleLinear()
			.domain(d3.extent(datos,function(d){return d['following']}))
			.range([-1, width + 1]);

	var y = d3.scaleLinear()
			.domain(d3.extent(datos,function(d){return d['following']}))
			.range([height + 1, -1]);

	svg.append("defs").append("clipPath")
		  .attr("id", "clip")
		.append("rect")
		  .attr("width", width)
		  .attr("height", height);

	var tooltip = d3.select("body").append("div")
    .attr("class", "tooltip")
    .style("opacity", 0);

	var color = d3.scaleLinear()
					.domain([0,1,2,3,4])
					.range(["#ff0000","#0000ff","#00ff00","#ffff00","#ff00ff"]);

	var xAxis = d3.axisBottom(x)
			.ticks((width + 2) / (height + 2) * 10)
			.tickSize(height)
			.tickPadding(8 - height);

	var yAxis = d3.axisRight(y)
			.ticks(10)
			.tickSize(width)
			.tickPadding(8 - width);
			
	var textx = svg.append("text")
			.attr("class", "label")
			.attr("x", width + 50)
			.attr("y", 15)
			.attr("text-anchor", "middle")
			.text("Seguidores");
		
	var texty = svg.append("text")
			.attr("class", "label")
			.attr("x", 35)
			.attr("y", height + 20)
			.attr("text-anchor", "middle")
			.text("Siguiendo");

	var titulo = svg.append("text")
			.attr("class", "label")
			.attr("x", width/2)
			.attr("y", height + 30)
			.attr("font-size", 20)
			.attr("text-anchor", "middle")
			.text("#TrumpPresident");

	var view0 = svg.append("rect")
			.attr("class", "view")
			.attr("id","rect0")
			.attr("x", 0.5)
			.attr("y", 0.5)
			.attr("width", width - 1)
			.attr("height", height - 1);

	var gX = svg.append("g")
			.attr("class", "axis axis--x")
			.call(xAxis);

	var gY = svg.append("g")
			.attr("class", "axis axis--y")
			.call(yAxis);

	var max_posts = d3.max(datos, function(d){ return d["posts"]; });

	var r = 8;

	var max_ratio = d3.max(datos, function(d){ return d["ratio"]; });

	d3.select("#b0")
			.on("click", resetted);

	var points = svg.append("g")
			.attr("clip-path", "url(#clip)")
			.selectAll(".punto")
			.data(datos)
			.enter().append("circle")
			.attr("class", "punto")
			.attr("id",function(d,i){return "punto-" + i})
			.attr("r",function(d,i){ return r*(1 + d["posts"]/max_posts); })
			.attr("cx", function(d){ return x(d["followers"])})
			.attr("cy", function(d){ return y(d["following"])})
			.attr("stroke", "#dddddd")
			.attr("stroke-width", 1)
			.attr("opacity", function(d){ return (d["ratio"] < 1 ? 0.1 : (d["ratio"] <= 45 ? 0.35 : 1))})
			.attr("fill", function(d){ 
				var ratio = (d["following"] > 0 ? d["followers"]/d["following"] : d["followers"]);
				ratio = (ratio <= 0.25 ? 0 : (ratio <= 0.5 ? 1 : ( ratio <= 2 ? 2 : ( ratio <= 4 ? 3 : 4))))
				return color(ratio);
			})
			.on("mouseover", function(d,i) {
					d3.selectAll(".punto").transition().attr("opacity", "0.2").duration(200);
					d3.select("#punto-"+i).transition().attr("opacity","1").duration(200);
          tooltip.transition()
               .duration(200)
               .style("opacity", .9);
          tooltip.html(d["id"] + "<br> (" + d["followers"] 
	        + ", " + d["following"] + ")<br>"
					+ "Posts: " + d["posts"] + "<br>"
					+ "DÃ­as activo: " + d["dias"] + "<br>"
					+ "Coeficiente de actividad: " + d["ratio"] + "<br>"
					+ (d["ratio"] < 1 ? (d["dias"] < 183 ? "Reciente" : "Poco activo") : (d["ratio"] <= 45 ? "Regular" : (d["posts"]/d["followers"] < 15 ? "Muy activo" : "Posible bot/spammer"))))
               .style("left", (d3.event.pageX + 5) + "px")
               .style("top", (d3.event.pageY - 28) + "px");
      })
      .on("mouseout", function(d) {
					d3.selectAll(".punto").transition().attr("opacity", function(d){ return (d["ratio"] < 1 ? 0.1 : (d["ratio"] <= 45 ? 0.35 : 1))}).duration(200);
          tooltip.transition()
               .duration(500)
               .style("opacity", 0);
      });

	svg.call(zoom);

	var svg1 = d3.select("#svg1");

	var g_pie = d3.pie().value(function(d){return d["sum"]})(porcentajes_usuarios);

	var arco = d3.arc().outerRadius(250).innerRadius(125).padAngle(0.03);
	svg1.append("g").attr("transform","translate(" + width/2 + "," + height/2 +")")
		.attr("id","centro")
		.selectAll(".arco_usr")
		.data(g_pie)
		.enter().append("g")
		.attr("class","arco_usr")
		.append("path")
		.attr("d",arco)
		.style("fill", function(d){return d.data["color"]})
		.on("mouseover",function(d){
			d3.select("#texto-p")
				.transition().duration(300)
				.attr("opacity",1);
			d3.select("#percentage")
				.text((100*d.data["sum"]/total).toFixed(2) + "%");
			d3.select("#label")
				.text("Usuarios: " + d.data["sum"]);
		})
		.on("mouseout",function(d){
			d3.select("#texto-p")
			.transition().duration(300)
			.attr("opacity",0);
		}); 

	var info_p = d3.select("#centro")
		.append("text")
		.attr("id","texto-p")
		.attr("opacity",0)
		.attr("text-anchor", "middle")
		.attr("x",0)
		.attr("y",-25)
		.append("svg:tspan")
			.attr("id","percentage")
			.attr("x",0)
			.attr("dy",7)
			.attr("font-size",30);
		d3.select("#texto-p").append("svg:tspan")
			.attr("id","label")
			.attr("x",0)
			.attr("dy",25)
			.attr("font-size",22);

	function zoomed() {
		view0.attr("transform", d3.event.transform);
		gX.call(xAxis.scale(d3.event.transform.rescaleX(x)));
		gY.call(yAxis.scale(d3.event.transform.rescaleY(y)));
		d3.selectAll(".punto").attr("transform",d3.event.transform)
			.attr("r", function(d){return (r*(1 + d["posts"]/max_posts))/d3.event.transform.k})
			.attr("stroke-width",1/d3.event.transform.k);
	}

	function resetted() {
		svg.transition()
			  .duration(750)
			  .call(zoom.transform, d3.zoomIdentity);
	}

	function month2Num(mes){
		var meses = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
		return meses.indexOf(mes);
	}

});

</script>

